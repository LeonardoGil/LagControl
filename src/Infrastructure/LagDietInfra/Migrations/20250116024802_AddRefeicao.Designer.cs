// <auto-generated />
using System;
using LagFinanceInfra.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LagDietInfra.Migrations
{
    [DbContext(typeof(LagDietDbContext))]
    [Migration("20250116024802_AddRefeicao")]
    partial class AddRefeicao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("diet")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LagDietDomain.Entities.Alimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Carboidratos")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Gorduras")
                        .HasColumnType("float");

                    b.Property<int>("Kcal")
                        .HasColumnType("int");

                    b.Property<double>("Porcao")
                        .HasColumnType("float");

                    b.Property<double>("Proteinas")
                        .HasColumnType("float");

                    b.Property<int>("UnidadeMedida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Alimento", "diet");
                });

            modelBuilder.Entity("LagDietDomain.Entities.Refeicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Refeicao", "diet");
                });

            modelBuilder.Entity("LagDietDomain.Entities.RefeicaoAlimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<double>("Porcao")
                        .HasColumnType("float");

                    b.Property<Guid>("Refeicao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RefeicaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnidadeMedida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.HasIndex("RefeicaoId");

                    b.ToTable("RefeicaoAlimento", "diet");
                });

            modelBuilder.Entity("LagDietDomain.Entities.RefeicaoAlimento", b =>
                {
                    b.HasOne("LagDietDomain.Entities.Alimento", "Alimento")
                        .WithMany()
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LagDietDomain.Entities.Refeicao", null)
                        .WithMany("Alimentos")
                        .HasForeignKey("RefeicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");
                });

            modelBuilder.Entity("LagDietDomain.Entities.Refeicao", b =>
                {
                    b.Navigation("Alimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
